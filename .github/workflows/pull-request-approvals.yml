name: Pull Request Approval Workflow
run-name: ${{ inputs.pr_number != '' && format('Test Assign Reviewers for PR \#{0}', inputs.pr_number) || format('Assign Reviewers for PR \#{0} to {1}', github.event.pull_request.number, github.base_ref) }}

on: 
  pull_request:
    branches:
      - '**'
  workflow_dispatch:
    inputs:
      yaml_filename:
        description: 'The filename of the YAML configuration file'
        required: false
        default: 'REVIEWERS.yml'
      pr_number:
        description: 'Override the PR number (for testing purposes)'
      team-name:
        description: 'The name of the team to assign the reviewers for PR approval'
        required: false
        default: 'Team-Test-Creation-A'
        type: string

permissions:
  actions: read
  contents: read
  pull-requests: write
  checks: write

jobs:
  validate-pr-requirements:
    runs-on: ubuntu-latest
    outputs:
      status: ${{ steps.check-reviews.outputs.status }}
    environment: 
      name: cloud-platform
    steps:
      - uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ vars.APP_ID }}
          private-key: ${{ secrets.APP_KEY }}
          owner: ${{ github.repository_owner }}

      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
  
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install PyYAML PyGithub gitpython

      - name: Read and Validate PR Requirements
        id: validate-pr-requirements
        env:
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
          GITHUB_ORGANIZATION: ${{ github.repository_owner }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          TEAM_NAME: ${{ inputs.team-name || 'Team-Test-Creation-A' }}
          TARGET_BRANCH: ${{ github.base_ref }}
          PR_NUMBER: ${{ inputs.pr_number || github.event.pull_request.number }}
        run: |
          python .github/scripts/validate_pr_requirements.py

  block-merge:
    needs: validate-pr-requirements
    if: needs.validate-pr-requirements.outputs.status == 'false'
    runs-on: ubuntu-latest
    environment: 
      name: cloud-platform
    steps:
      - uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ vars.APP_ID }}
          private-key: ${{ secrets.APP_KEY }}
          owner: ${{ github.repository_owner }}

      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
    
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install PyYAML PyGithub gitpython
     
      - name: Block Merge
        env:
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
          GITHUB_ORGANIZATION: ${{ github.repository_owner }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          TEAM_NAME: ${{ inputs.team-name || 'Team-Test-Creation-A' }}
          TARGET_BRANCH: ${{ github.base_ref }}
          PR_NUMBER: ${{ inputs.pr_number || github.event.pull_request.number }}
        run: |
          python .github/scripts/validate_block_pr_merge.py

  assign-reviewers-and-assignees:
    needs: validate-pr-requirements
    runs-on: ubuntu-latest
    environment: 
      name: cloud-platform
    steps:
      - uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ vars.APP_ID }}
          private-key: ${{ secrets.APP_KEY }}
          owner: ${{ github.repository_owner }}

      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
  
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install PyYAML PyGithub gitpython

      - name: Assign Reviewers and Assignees
        env:
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
          GITHUB_ORGANIZATION: ${{ github.repository_owner }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          TEAM_NAME: ${{ inputs.team-name || 'Team-Test-Creation-A' }}
          TARGET_BRANCH: ${{ github.base_ref }}
          PR_NUMBER: ${{ inputs.pr_number || github.event.pull_request.number }}
        run: |
          python .github/scripts/validate_pr_assign_reviewers.py 