# Function to extract version from asset name
          parse_asset_version() {
            local asset_name="$1"
            local base_name=""
            local version=""
            local is_latest="false"
            
            # Remove .jar extension if present
            asset_name=${asset_name%.jar}
            
            # Debug output
            echo "Processing asset: $asset_name"
            
            # Match pattern like failsafe-IDCTPaymentsEngine-1.0.30
            if [[ $asset_name =~ ^(failsafe-[A-Za-z]+)-([0-9]+\.[0-9]+\.[0-9]+)$ ]]; then
                # Extract base name (everything before the last hyphen)
                base_name=$(echo "$asset_name" | sed 's/-[0-9]\+\.[0-9]\+\.[0-9]\+$//')
                # Extract version (everything after the last hyphen)
                version=$(echo "$asset_name" | sed 's/.*-\([0-9]\+\.[0-9]\+\.[0-9]\+\)$/\1/')
                
                echo "Extracted components:"
                echo "  Base name: $base_name"
                echo "  Version: $version"
            else
                echo "WARNING: Could not parse version from $asset_name"
                return 1
            fi
            
            # Verify we have both base_name and version
            if [ -z "$base_name" ] || [ -z "$version" ]; then
                echo "ERROR: Failed to extract base_name or version"
                return 1
            fi
            
            echo "Final parsing - Base: $base_name, Version: $version, Is Latest: $is_latest"
            echo "$base_name|$version|$is_latest"
          }
          
          # Process each asset and create a mapping file
          echo "ASSET_MAPPING<<EOF" >> $GITHUB_OUTPUT
          for asset in downloads/*; do
            filename=$(basename "$asset")
            echo "Processing file: $filename"
            if parsed=$(parse_asset_version "$filename"); then
                echo "$filename|$parsed" >> $GITHUB_OUTPUT
                echo "Successfully parsed: $filename|$parsed"
            else
                echo "Failed to parse: $filename"
                exit 1
            fi
          done
          echo "EOF" >> $GITHUB_OUTPUT
