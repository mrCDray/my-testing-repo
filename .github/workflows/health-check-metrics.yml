name: Repository Health Check

on:
#   schedule:
#     - cron: '0 0 * * 1'  # Run weekly on Monday at midnight
  workflow_dispatch:      # Allow manual trigger
  push:
    branches:
      - main            # Run on main branch pushes
    paths:
      - 'repo_health_config.yaml'  # Run when config changes

jobs:
  health-check:
    runs-on: ubuntu-latest
    environment: 
      name: cloud-platform
    
    steps:
    - uses: actions/create-github-app-token@v1
      id: app-token
      with:
        app-id: ${{ vars.APP_ID }}
        private-key: ${{ secrets.APP_KEY }}
        owner: ${{ github.repository_owner }}

    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install PyGithub pandas pyyaml tqdm
        
    - name: Create config if not exists
      run: |
        if [ ! -f "repo_health_config.yaml" ]; then
          python .github/scripts/repo_health_check.py --init-config
        fi
        
    - name: Run health check
      env:
        GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
        ORG_NAME: ${{ github.repository_owner }}
      run: |
        python .github/scripts/repo_health_check.py
        
    - name: Upload reports
      uses: actions/upload-artifact@v4
      with:
        name: health-reports
        path: reports/
        
    - name: Create Issue for Critical Findings
      if: success()
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const path = require('path');
          
          // Read the summary report
          const reportFiles = fs.readdirSync('reports');
          const summaryFile = reportFiles.find(f => f.endsWith('_summary.md'));
          const summaryContent = fs.readFileSync(path.join('reports', summaryFile), 'utf8');
          
          // Create an issue if there are critical or high alerts
          if (summaryContent.includes('Critical Alerts') || summaryContent.includes('RED')) {
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'ðŸš¨ Repository Health Check Findings',
              body: summaryContent,
              labels: ['health-check', 'security']
            });
          }