name: Validate Format Lint

on:
  push:
  pull_request:
    branches:
      - main
      - develop

permissions:
  contents: write  # To grant write access

jobs:
  format-and-lint:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python - m pip install --upgrade pip
        pip install black pylint pytest pyyaml

    - name: Run Black Formatter on Scripts
      run: | 
        # Format all python files in scripts and tests
        black --line-length=120 scripts/*.py
        black --line-length=120 tests/*.py
        
    - name: Commit Black Formatting Changes in Pull Request
      if: github.event_name == 'pull_request'
      env:
        branch_ref: ${{ github.head_ref || github.ref_name }}
      run: | 
        # Check if there are any changes after formatting
        if [[ -n "$(git status --porcelain)" ]]; then
          git branch -a
          git  checkout -b $branch_ref
          git push -u origin $branch_ref
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add scripts/*.py tests/*.py
          git commit -m "Apply Black formatting to Python scripts and tests"
          git checkout -b temp-pr
          git checkout $branch_ref
          git pull origin $branch_ref
          git merge temp-pr
          git push origin $branch_ref
          git branch -D temp-pr
        fi

    - name: Commit Black Formatting Changes Push
      if: github.event_name == 'push'
      run: | 
        # Check if there are any changes after formatting
        if [[ -n "$(git status --porcelain)" ]]; then
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add scripts/*.py tests/*.py
          git commit -m "Apply Black formatting to Python scripts and tests"
          git push
        fi
  
    - name: Lint implementation code
      run: |
        pylint --rcfile=.pylintrc scripts/*.py

    - name: Lint test code
      run: |
        pylint --rcfile=.test-pylintrc tests/*.py

